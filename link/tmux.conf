# use C-a, since it's on the home row and easier to hit than C-b
set -g prefix C-a
bind-key C-a send-prefix

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi
set -g status-keys vi

# good way to ensure emulated term can support more colors
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# window/pane number starts with 1
set -g base-index 1
set -g pane-base-index 1

# mouse behavior in 2.1+
set -g mouse on
# for mouse behavior in <2.1
# setw -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on

# show pane indicators for 1.5 seconds
setw -g display-panes-time 1500

# Allow the arrow key to be used immediately after changing windows
set -g repeat-time 0

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# AFAICT.
set -g assume-paste-time 0

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key '\' select-pane -l

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-'\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key q display-panes

bind-key c new-window
bind-key t next-window
bind-key T previous-window
bind-key bspace previous-window
bind-key space next-window

bind-key : command-prompt

bind-key C-l send-keys 'C-l'

bind-key enter next-layout

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
setw -g other-pane-height 25
setw -g other-pane-width 80

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim and 'y' to yank
# for tmux >= 2.4
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection
# for tmux < 2.4
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-selection

# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
# see: https://github.com/tmux/tmux/issues/145
bind -n   WheelUpPane if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -T copy-mode-vi C-WheelUpPane   send -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send -X halfpage-down
bind -T copy-mode C-WheelUpPane   send -X halfpage-up
bind -T copy-mode C-WheelDownPane send -X halfpage-down
# < 2.4 config
# bind -t vi-copy    C-WheelUpPane   halfpage-up
# bind -t vi-copy    C-WheelDownPane halfpage-down
# bind -t emacs-copy C-WheelUpPane   halfpage-up
# bind -t emacs-copy C-WheelDownPane halfpage-down

if-shell "uname | grep -q Darwin" "source-file ~/.tmux.conf.macosx"

######################
### DESIGN CHANGES ###
######################

set -g set-titles on
set -g set-titles-string 'tmux - #W'

set -g status-position bottom
set -g status-justify left
set -g status-interval 5

set -g status-style fg=colour0,bg=colour29
set -g status-right ' %Y-%m-%d %H:%M:%S '

set -g pane-border-style fg=colour238,bg=colour235
set -g pane-active-border-style fg=brightred,bg=colour236

setw -g window-status-style fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-activity-style fg=colour255,bg=colour3,bold
setw -g window-status-bell-style fg=colour255,bg=colour5,bold

set -g message-style fg=black,bg=yellow
set -g message-command-style fg=blue,bg=black

setw -g mode-style fg=colour0,bg=colour6

setw -g clock-mode-colour colour135

set -g renumber-windows on

# A set of meta (alt) based keybindings
# from: https://zserge.com/posts/tmux/
set -s escape-time 0
# directly change to that window number
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0

# rotate through windows
bind-key -n M-. select-window -n
bind-key -n M-, select-window -p
# shift a window down or up
bind-key -n M-< swap-window -t -1
bind-key -n M-> swap-window -t +1

bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind-key -n M-f resize-pane -Z
bind-key -n M-F next-layout
bind-key -n M-x confirm-before "kill-pane"
bind-key -n M-X confirm-before "kill-window"
bind-key -n M-R command-prompt -I "" "rename-window '%%'"

bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D
# swap pane in a direction
bind-key -n "M-H" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-J" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-K" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-L" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind-key -n "M-S-Left" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-S-Down" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-S-Up" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-S-Right" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'

bind-key -n M-/ copy-mode
bind-key -n M-p paste-buffer

# loud or quiet?
setw -g monitor-activity on
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
